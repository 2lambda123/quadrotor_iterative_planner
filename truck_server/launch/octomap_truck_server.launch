<launch>
  <arg name="has_uav" default="true"/>
  <arg name="route" default="circle"/>
  <arg name="radius" default="30.0"/>
  <arg name="has_car_outter" default="true"/>
  <arg name="has_car_inner" default="true"/>
  <arg name="spline_degree" default="2"/>

  <node pkg="truck_server" type="octomap_truck_server_node" name="octomap_talker" output="screen">
    <param name="resolution" value="0.2" />
    <param name="tree_depth" value="10" />
    <param name="frame_id" type="string" value="world" />
    <param name="has_car_inner" value="$(arg has_car_inner)" />
    <param name="has_car_outter" value="$(arg has_car_outter)" />
    <param name="ARA_rate" value="2.0" />
    <!-- 7 is planar connected, 19 is including line connected, 27 is including verticle connected -->
    <param name="graph_connected_mode" value="7" />

    <!-- track or circle -->
    <param name="route_name" value="$(arg route)" />
    <param name="route_radius" value="$(arg radius)" />
    <param name="truck_odom_sub_topic_name" value="/truck_odom" />
    <param name="octomap_update_rate" value="50" />
    <param name="vehicle_octomap_visualize_mode" value="1" />
    <param name="vehicle_inner_type" value="1" />
    <param name="vehicle_outter_type" value="2" />
  </node>

  <node pkg="truck_server" type="sim_cars_poses_pub.py" name="sim_cars_poses_pub" output="screen">
    <param name="has_car_inner" value="$(arg has_car_inner)" />
    <param name="has_car_outter" value="$(arg has_car_outter)" />
    <param name="route_name" value="$(arg route)" />
    <param name="route_radius" value="$(arg radius)" />
    <param name="truck_vel" value="4.17" />
    <param name="car_outter_vel" value="4.575" />
    <param name="car_inner_vel" value="3.765" />
  </node>

  <!-- generate global bspline path message -->
  <node pkg="bspline_ros" type="tinyspline_ros_node" name="bspline_ros" output="screen">
    <param name="spline_degree" value="$(arg spline_degree)" />
  </node>

  <node pkg="quadrotor_trajectory" type="vehicle_trajectory_estimator_node" name="truck_traj" output="screen">
    <param name="vehicle_traj_param_pub_topic_name" value="/truck_traj_param" />
    <param name="vehicle_traj_path_pub_topic_name" value="/truck_traj_path" />
    <param name="vehicle_traj_polynomial_order" value="8" />
    <param name="vehicle_traj_derivation_order" value="4" />
    <param name="vehicle_lambda_D" value="1.0" />
    <param name="vehicle_estimate_odom_number" value="40" />
    <param name="vehicle_trajectory_generate_freqency" value="5" />
    <param name="vehicle_visualization_predict_time" value="5.0" />
    <param name="vehicle_visualization_preview_time" value="2.0" />
    <param name="param_output_param" value="false" />
  </node>

  <group if="$(arg has_car_inner)">
    <node pkg="quadrotor_trajectory" type="vehicle_trajectory_estimator_node" name="car_inner_traj" output="screen">
      <param name="vehicle_odom_sub_topic_name" value="/car_inner_odom" />
      <param name="vehicle_traj_param_pub_topic_name" value="/car_inner_traj_param" />
      <param name="vehicle_traj_path_pub_topic_name" value="/car_inner_path" />
      <param name="vehicle_traj_polynomial_order" value="8" />
      <param name="vehicle_traj_derivation_order" value="4" />
      <param name="vehicle_lambda_D" value="1.0" />
      <param name="vehicle_estimate_odom_number" value="40" />
      <param name="vehicle_trajectory_generate_freqency" value="5" />
      <param name="vehicle_visualization_predict_time" value="5.0" />
      <param name="vehicle_visualization_preview_time" value="2.0" />
      <param name="param_output_param" value="false" />
    </node>
  </group>

  <group if="$(arg has_car_outter)">
    <node pkg="quadrotor_trajectory" type="vehicle_trajectory_estimator_node" name="car_outter_traj" output="screen">
      <param name="vehicle_type" value="2" />
      <param name="vehicle_odom_sub_topic_name" value="/car_outter_odom" />
      <param name="vehicle_traj_param_pub_topic_name" value="/car_outter_traj_param" />
      <param name="vehicle_traj_path_pub_topic_name" value="/car_outter_path" />
      <param name="vehicle_traj_polynomial_order" value="8" />
      <param name="vehicle_traj_derivation_order" value="4" />
      <param name="vehicle_lambda_D" value="1.0" />
      <param name="vehicle_estimate_odom_number" value="40" />
      <param name="vehicle_trajectory_generate_freqency" value="5" />
      <param name="vehicle_visualization_predict_time" value="5.0" />
      <param name="vehicle_visualization_preview_time" value="2.0" />
      <param name="param_output_param" value="false" />
    </node>
  </group>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find truck_server)/config/truck_octomap.rviz" />
  <node pkg="truck_server" type="lane_marker_flag.py" name="lane_marker_flag" />

  <group if="$(arg has_uav)">
    <!-- Task1 environment with moving truck -->
    <!-- <include file="$(find jsk_mbzirc_common)/launch/mbzirc_arena.launch" > -->
    <!--   <arg name="gui" default="true"  /> -->
    <!--   <arg name="world_name" default="$(find jsk_mbzirc_common)/gazebo_model/world/mbzirc_arena_task_1.world"/> -->
    <!-- </include> -->

    <!-- Task1 environment only -->
    <!-- <include file="$(find jsk_mbzirc_common)/launch/mbzirc_arena_1.launch" > -->
    <!--   <arg name="gui" value="true" /> -->
    <!-- </include> -->

    <!-- Empty environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" >
      <arg name="gui" value="false" />
    </include>

    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="name" value="quadrotor"/>
      <!-- <arg name="model" value="$(find jsk_mbzirc_tasks)/urdf/hawk.urdf.xacro"/> -->
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_downward_cam.gazebo.xacro"/>
      <arg name="use_ground_truth_for_tf" value="true" />
      <arg name="use_ground_truth_for_control" value="true" />
      <arg name="x" value="-10"/>
      <arg name="y" value="-$(arg radius)"/>
      <arg name="z" value="0.5"/>
    </include>
    <node pkg="truck_server" type="uav_teleop_keyboard" name="uav_teleop_keyboard"
          launch-prefix="xterm -e">
        <param name="teleopUGV" value="false"/>
        <remap from="teleopUGV" to="uav_teleop_keyboard/teleopUGV"/>
    </node>

  </group>
</launch>
